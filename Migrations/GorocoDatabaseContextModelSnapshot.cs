// <auto-generated />
using System;
using DoAnThietKeWeb1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DoAnThietKeWeb1.Migrations
{
    [DbContext(typeof(GorocoDatabaseContext))]
    partial class GorocoDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DoAnThietKeWeb1.Models.Blog", b =>
                {
                    b.Property<string>("BlogId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BlogID");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("PostedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("BlogId")
                        .HasName("PK__Blogs__54379E50B2D20215");

                    b.ToTable("Blogs", t =>
                        {
                            t.HasTrigger("trg_Blogs_Insert");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DoAnThietKeWeb1.Models.Cart", b =>
                {
                    b.Property<string>("CartId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CartID");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserID");

                    b.HasKey("CartId")
                        .HasName("PK__Carts__51BCD7971BBD538F");

                    b.HasIndex(new[] { "UserId" }, "IX_Carts_UserID");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("DoAnThietKeWeb1.Models.CartItem", b =>
                {
                    b.Property<string>("CartItemId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CartItemID");

                    b.Property<string>("CartId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CartID");

                    b.Property<string>("ProductId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ProductID");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("CartItemId")
                        .HasName("PK__CartItem__488B0B2A758FB707");

                    b.HasIndex(new[] { "CartId" }, "IX_CartItems_CartID");

                    b.HasIndex(new[] { "ProductId" }, "IX_CartItems_ProductID");

                    b.ToTable("CartItems", t =>
                        {
                            t.HasTrigger("trg_CartItems_Insert");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DoAnThietKeWeb1.Models.Favorite", b =>
                {
                    b.Property<string>("FavoriteId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FavoriteID");

                    b.Property<string>("ProductId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ProductID");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserID");

                    b.HasKey("FavoriteId")
                        .HasName("PK__Favorite__CE74FAF569C8B02A");

                    b.HasIndex(new[] { "ProductId" }, "IX_Favorites_ProductID");

                    b.HasIndex(new[] { "UserId" }, "IX_Favorites_UserID");

                    b.ToTable("Favorites", t =>
                        {
                            t.HasTrigger("trg_Favorites_Insert");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DoAnThietKeWeb1.Models.Gallery", b =>
                {
                    b.Property<string>("GalleryId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("GalleryID");

                    b.Property<string>("ImageName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GalleryId")
                        .HasName("PK__Gallerie__CF4F7B9561E67FC7");

                    b.ToTable("Galleries", t =>
                        {
                            t.HasTrigger("trg_Galleries_Insert");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DoAnThietKeWeb1.Models.Invoice", b =>
                {
                    b.Property<string>("InvoiceId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("InvoiceID");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserID");

                    b.HasKey("InvoiceId")
                        .HasName("PK__Invoices__D796AAD54169D70F");

                    b.HasIndex(new[] { "UserId" }, "IX_Invoices_UserID");

                    b.ToTable("Invoices", t =>
                        {
                            t.HasTrigger("trg_Invoices_Insert");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DoAnThietKeWeb1.Models.InvoiceDetail", b =>
                {
                    b.Property<string>("InvoiceDetailId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("InvoiceDetailID");

                    b.Property<string>("InvoiceId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("InvoiceID");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("ProductId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ProductID");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("InvoiceDetailId")
                        .HasName("PK__InvoiceD__1F1578F14DC01708");

                    b.HasIndex(new[] { "InvoiceId" }, "IX_InvoiceDetails_InvoiceID");

                    b.HasIndex(new[] { "ProductId" }, "IX_InvoiceDetails_ProductID");

                    b.ToTable("InvoiceDetails", t =>
                        {
                            t.HasTrigger("trg_InvoiceDetails_Insert");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DoAnThietKeWeb1.Models.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ProductID");

                    b.Property<decimal?>("AverageRating")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(3, 2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Image")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("Trending")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("ProductId")
                        .HasName("PK__Products__B40CC6EDB1825F50");

                    b.ToTable("Products", t =>
                        {
                            t.HasTrigger("trg_Products_Insert");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DoAnThietKeWeb1.Models.Review", b =>
                {
                    b.Property<string>("ReviewId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ReviewID");

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ProductId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ProductID");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReviewDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserID");

                    b.HasKey("ReviewId")
                        .HasName("PK__Reviews__74BC79AED2CC0544");

                    b.HasIndex(new[] { "ProductId" }, "IX_Reviews_ProductID");

                    b.HasIndex(new[] { "UserId" }, "IX_Reviews_UserID");

                    b.ToTable("Reviews", t =>
                        {
                            t.HasTrigger("trg_Reviews_Insert");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DoAnThietKeWeb1.Models.CartItem", b =>
                {
                    b.HasOne("DoAnThietKeWeb1.Models.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .HasConstraintName("FK__CartItems__CartI__4D94879B");

                    b.HasOne("DoAnThietKeWeb1.Models.Product", "Product")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__CartItems__Produ__4E88ABD4");

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DoAnThietKeWeb1.Models.Favorite", b =>
                {
                    b.HasOne("DoAnThietKeWeb1.Models.Product", "Product")
                        .WithMany("Favorites")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Favorites__Produ__52593CB8");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DoAnThietKeWeb1.Models.InvoiceDetail", b =>
                {
                    b.HasOne("DoAnThietKeWeb1.Models.Invoice", "Invoice")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceId")
                        .HasConstraintName("FK__InvoiceDe__Invoi__59063A47");

                    b.HasOne("DoAnThietKeWeb1.Models.Product", "Product")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__InvoiceDe__Produ__59FA5E80");

                    b.Navigation("Invoice");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DoAnThietKeWeb1.Models.Review", b =>
                {
                    b.HasOne("DoAnThietKeWeb1.Models.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Reviews__Product__44FF419A");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DoAnThietKeWeb1.Models.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("DoAnThietKeWeb1.Models.Invoice", b =>
                {
                    b.Navigation("InvoiceDetails");
                });

            modelBuilder.Entity("DoAnThietKeWeb1.Models.Product", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Favorites");

                    b.Navigation("InvoiceDetails");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
